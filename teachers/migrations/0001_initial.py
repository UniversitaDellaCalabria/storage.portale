# Generated by Django 4.2.16 on 2024-10-21 11:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import generics.validators
import teachers.settings


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("addressbook", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PubblicazioneCollection",
            fields=[
                (
                    "collection_id",
                    models.IntegerField(
                        db_column="COLLECTION_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "collection_name",
                    models.CharField(
                        blank=True,
                        db_column="COLLECTION_NAME",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "type_miur",
                    models.CharField(
                        blank=True, db_column="TYPE_MIUR", max_length=50, null=True
                    ),
                ),
            ],
            options={
                "db_table": "PUBBLICAZIONE_COLLECTION",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PubblicazioneCommunity",
            fields=[
                (
                    "community_id",
                    models.IntegerField(
                        db_column="COMMUNITY_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "community_name",
                    models.CharField(
                        blank=True,
                        db_column="COMMUNITY_NAME",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "parent_community_id",
                    models.IntegerField(
                        blank=True, db_column="PARENT_COMMUNITY_ID", null=True
                    ),
                ),
                (
                    "parent_community_name",
                    models.CharField(
                        blank=True,
                        db_column="PARENT_COMMUNITY_NAME",
                        max_length=512,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "PUBBLICAZIONE_COMMUNITY",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="PubblicazioneDatiBase",
            fields=[
                (
                    "item_id",
                    models.IntegerField(
                        db_column="ITEM_ID", primary_key=True, serialize=False
                    ),
                ),
                ("title", models.TextField(blank=True, db_column="TITLE", null=True)),
                (
                    "des_abstract",
                    models.TextField(blank=True, db_column="DES_ABSTRACT", null=True),
                ),
                (
                    "des_abstracteng",
                    models.TextField(
                        blank=True, db_column="DES_ABSTRACTENG", null=True
                    ),
                ),
                (
                    "lan_iso",
                    models.CharField(
                        blank=True, db_column="LAN_ISO", max_length=200, null=True
                    ),
                ),
                (
                    "lan_iso_i18n",
                    models.CharField(
                        blank=True, db_column="LAN_ISO_I18N", max_length=400, null=True
                    ),
                ),
                (
                    "date_issued_year",
                    models.IntegerField(
                        blank=True, db_column="DATE_ISSUED_YEAR", null=True
                    ),
                ),
                (
                    "pubblicazione",
                    models.CharField(
                        blank=True,
                        db_column="PUBBLICAZIONE",
                        max_length=1024,
                        null=True,
                    ),
                ),
                (
                    "label_pubblicazione",
                    models.CharField(
                        blank=True,
                        db_column="LABEL_PUBBLICAZIONE",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "contributors",
                    models.TextField(blank=True, db_column="CONTRIBUTORS", null=True),
                ),
                (
                    "url_pubblicazione",
                    models.URLField(
                        blank=True,
                        db_column="URL_PUBBLICAZIONE",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        db_column="COLLECTION_ID",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="teachers.pubblicazionecollection",
                    ),
                ),
            ],
            options={
                "db_table": "PUBBLICAZIONE_DATI_BASE",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="pubblicazionecollection",
            name="community",
            field=models.ForeignKey(
                blank=True,
                db_column="COMMUNITY_ID",
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="teachers.pubblicazionecommunity",
            ),
        ),
        migrations.CreateModel(
            name="PubblicazioneAutori",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codice_fiscale",
                    models.CharField(
                        blank=True, db_column="CODICE_FISCALE", max_length=16, null=True
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, db_column="FIRST_NAME", max_length=1020, null=True
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, db_column="LAST_NAME", max_length=1020, null=True
                    ),
                ),
                (
                    "ab",
                    models.ForeignKey(
                        blank=True,
                        db_column="ID_AB",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="addressbook.personale",
                        to_field="id_ab",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        db_column="ITEM_ID",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="teachers.pubblicazionedatibase",
                    ),
                ),
            ],
            options={
                "db_table": "PUBBLICAZIONE_AUTORI",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DocentePtaBacheca",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                (
                    "tipo_testo",
                    models.CharField(db_column="TIPO_TESTO", max_length=100),
                ),
                (
                    "tipo_testo_en",
                    models.CharField(
                        blank=True, db_column="TIPO_TESTO_EN", max_length=100, null=True
                    ),
                ),
                ("titolo", models.CharField(db_column="TITOLO", max_length=200)),
                (
                    "titolo_en",
                    models.CharField(
                        blank=True, db_column="TITOLO_EN", max_length=200, null=True
                    ),
                ),
                ("testo", models.TextField(db_column="TESTO")),
                (
                    "testo_en",
                    models.TextField(blank=True, db_column="TESTO_EN", null=True),
                ),
                (
                    "url_testo",
                    models.URLField(
                        blank=True, db_column="URL_TESTO", max_length=400, null=True
                    ),
                ),
                (
                    "url_testo_en",
                    models.URLField(
                        blank=True, db_column="URL_TESTO_EN", max_length=400, null=True
                    ),
                ),
                ("ordine", models.IntegerField(db_column="ORDINE")),
                ("attivo", models.BooleanField(db_column="ATTIVO")),
                (
                    "dt_pubblicazione",
                    models.DateTimeField(
                        blank=True, db_column="DT_PUBBLICAZIONE", null=True
                    ),
                ),
                (
                    "dt_inizio_validita",
                    models.DateTimeField(
                        blank=True, db_column="DT_INIZIO_VALIDITA", null=True
                    ),
                ),
                (
                    "dt_fine_validita",
                    models.DateTimeField(
                        blank=True, db_column="DT_FINE_VALIDITA", null=True
                    ),
                ),
                (
                    "dt_mod",
                    models.DateTimeField(blank=True, db_column="DT_MOD", null=True),
                ),
                (
                    "matricola",
                    models.ForeignKey(
                        db_column="MATRICOLA",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="addressbook.personale",
                        to_field="matricola",
                    ),
                ),
                (
                    "user_mod",
                    models.ForeignKey(
                        blank=True,
                        db_column="user_mod_id_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "DOCENTE_PTA_BACHECA",
                "ordering": ("ordine", "-dt_pubblicazione", "-dt_inizio_validita"),
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DocentePtaAltriDati",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                (
                    "path_foto",
                    models.FileField(
                        blank=True,
                        db_column="PATH_FOTO",
                        max_length=500,
                        null=True,
                        upload_to=teachers.settings.teacher_photo_media_path,
                        validators=[
                            generics.validators.validate_image_file_extension,
                            generics.validators.validate_file_size,
                            generics.validators.validate_image_size_ratio,
                        ],
                    ),
                ),
                (
                    "path_cv_ita",
                    models.FileField(
                        blank=True,
                        db_column="PATH_CV_ITA",
                        max_length=500,
                        null=True,
                        upload_to=teachers.settings.teacher_cv_ita_media_path,
                        validators=[
                            generics.validators.validate_pdf_file_extension,
                            generics.validators.validate_file_size,
                        ],
                    ),
                ),
                (
                    "path_cv_en",
                    models.FileField(
                        blank=True,
                        db_column="PATH_CV_EN",
                        max_length=500,
                        null=True,
                        upload_to=teachers.settings.teacher_cv_en_media_path,
                        validators=[
                            generics.validators.validate_pdf_file_extension,
                            generics.validators.validate_file_size,
                        ],
                    ),
                ),
                (
                    "breve_bio",
                    models.TextField(blank=True, db_column="BREVE_BIO", null=True),
                ),
                (
                    "breve_bio_en",
                    models.TextField(blank=True, db_column="BREVE_BIO_EN", null=True),
                ),
                (
                    "orario_ricevimento",
                    models.TextField(
                        blank=True, db_column="ORARIO_RICEVIMENTO", null=True
                    ),
                ),
                (
                    "orario_ricevimento_en",
                    models.TextField(
                        blank=True, db_column="ORARIO_RICEVIMENTO_EN", null=True
                    ),
                ),
                (
                    "orcid",
                    models.CharField(
                        blank=True,
                        db_column="ORCID",
                        max_length=100,
                        null=True,
                        validators=[generics.validators.orcid_validator],
                    ),
                ),
                (
                    "dt_mod",
                    models.DateTimeField(blank=True, db_column="DT_MOD", null=True),
                ),
                (
                    "matricola",
                    models.OneToOneField(
                        db_column="MATRICOLA",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="addressbook.personale",
                        to_field="matricola",
                    ),
                ),
                (
                    "user_mod",
                    models.ForeignKey(
                        blank=True,
                        db_column="user_mod_id_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "DOCENTE_PTA_ALTRI_DATI",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="DocenteMaterialeDidattico",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                ("titolo", models.CharField(db_column="TITOLO", max_length=200)),
                (
                    "titolo_en",
                    models.CharField(
                        blank=True, db_column="TITOLO_EN", max_length=200, null=True
                    ),
                ),
                ("testo", models.TextField(db_column="TESTO")),
                (
                    "testo_en",
                    models.TextField(blank=True, db_column="TESTO_EN", null=True),
                ),
                (
                    "url_testo",
                    models.URLField(
                        blank=True, db_column="URL_TESTO", max_length=400, null=True
                    ),
                ),
                (
                    "url_testo_en",
                    models.URLField(
                        blank=True, db_column="URL_TESTO_EN", max_length=400, null=True
                    ),
                ),
                ("ordine", models.IntegerField(db_column="ORDINE")),
                ("attivo", models.BooleanField(db_column="ATTIVO")),
                (
                    "dt_pubblicazione",
                    models.DateTimeField(
                        blank=True, db_column="DT_PUBBLICAZIONE", null=True
                    ),
                ),
                (
                    "dt_inizio_validita",
                    models.DateTimeField(
                        blank=True, db_column="DT_INIZIO_VALIDITA", null=True
                    ),
                ),
                (
                    "dt_fine_validita",
                    models.DateTimeField(
                        blank=True, db_column="DT_FINE_VALIDITA", null=True
                    ),
                ),
                (
                    "dt_mod",
                    models.DateTimeField(blank=True, db_column="DT_MOD", null=True),
                ),
                (
                    "matricola",
                    models.ForeignKey(
                        db_column="MATRICOLA",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="addressbook.personale",
                        to_field="matricola",
                    ),
                ),
                (
                    "user_mod",
                    models.ForeignKey(
                        blank=True,
                        db_column="user_mod_id_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "DOCENTE_MATERIALE_DIDATTICO",
                "ordering": ("ordine", "-dt_pubblicazione", "-dt_inizio_validita"),
                "managed": True,
            },
        ),
    ]
